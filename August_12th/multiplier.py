
# 1. 구구단 프로그램
# 내가 원하는 숫자 n을 입력하면 (n=2~9까지 양의정수)
# 2x1 ~ 2x9까지 1단부터 9단까지 화면에 출력해주는 프로그램을 작성해봅시다

# 우선 이건 내가 짠 코드다.

def multiply(a):
    for i in range(1, 10):
        print(i, "X", a, "=", i*a)

multiply(7)

# 이게 윤희님이 짠 코드다.

b = int(input("원하는 구구단을 넣으시오 :"))

for i in range(1, 10):
    print(f"{b} x {i} = {b*i}")

# 이건 향아님이 짠 코드다. 완전히 완성은 못하셨어서, 뒷부분은 추가해봤다.

n = int(input("원하는 숫자 n을 입력 (2~9):"))
if 2 <= n <= 9:
    print(f"{n}단:")
    for j in range(1,10):
        print(f"{n} x {j} = {n*j}")
else:
        print("잘못된 값이 입력되었습니다")

# 세 코드를 비교해보면 차이가 명확하다.
# 우선 보면 나만 코드 내에서 그냥 결과가 출력되게 만들어뒀고, 나머지 두분은 모두 int(input())을 이용해서 사용자가 숫자를 입력하게 만들었다.
# 즉 다시말해 내 코드보다 훨씬 사용자 친화적이다. 실제로는 이 코드가 훨씬 좋을 것이다.
# 윤희님의 코드는 내 코드와 비교해보면 f 문자열 포맷팅을 이용, 나처럼 여러 문자열에 대한 병렬적 표기가 아니라 하나의 문자열에 값을 받아서 적는 방식으로 썼다.
# f 문자열 포맷팅은 코드를 작성할 때 필수적이지는 않지만 코드를 간편하게 적을 수 있게 해주는데, 코드를 많이 쳐보지 않은 나의 기술적 부족이 드러난다.
# 또한 향아님의 코드는 기입받은 값이 구구단에 부합하는지, 즉 기입받은 값에 대한 유효성 검사를 진행한 후 코드가 작동하게 만들어두었다.
# 나나 윤희님의 경우 정수형이 아니면 생길 오류에 대해서는 고려해두지 않은 코드이니, 이 점은 신경쓸만 하다.
# 이렇게 같은 과제를 주고도 코드를 치는 방식에서 고려할 점을 다른 사람 코드를 보면서 익힐 수 있다. 잘 배워보자.