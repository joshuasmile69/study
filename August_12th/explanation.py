# 8/12일 스터디 요약
# 사람마다 목표하는 바가 조금씩 다르기도 하고(데이터 분석, AI 학습, 웹 등등) 코딩 할 때 실제로 중요한 것도 따로 있다보니
# 프로그래밍을 할 때 필요한 관점(코딩 해석이 아니라 코드를 직접 짜보는 능력과 같은?)을 키워나가는 것을 중점으로 생각할 예정



# 코딩 테스트: 문제 4개를 각자 답해봅시다

#1. python(프로그래밍)에서 변수는 언제 왜 쓰나요?

# 일반화를 통해서 함수 등의 표현을 간편하게 할 수 있음, 차후 할당받을 값을 위치표기하는 용도로도 쓸 수 있음

#2. math.sqrt(4)에서의 sqrt와 print(4) 에서의 print의 공통점과 차이점은 무엇인가요?

# 공통점: 내장함수임!
# 차이점: print()는 뭔가를 출력하는데, math.sqrt()는 값을 출력하지는 않음
# 또한 math.sqrt()와 달리 print()는 그냥 뭔가를 출력하라는 의미이며, 딱히 어떤 값을 저장하거나 하지 않음

# 3. python(프로그래밍)에서 def로 시작하는 사용자 정의 함수는 언제 왜 쓰나요?
# 차후에 쓸 일이 많은 함수는, 미리 위에서 저장해서 재사용해서 쓰면 훨씬 코드가 간편하고 오류 가능성도 현저히 줄어듬

# 4. a=3 print(a) 에서의 a와 def absolute_value_1(a): 에서
# a라는 변수는 어떤 차이가 있나요?
# a=3 print(a)의 경우 a는 전역변수(global variable)이므로, a=3이라는 값이 코드 전체에서 지정된 것. 또한 a에는 이미 3이라는 값이 할당된 것
# def absolute_value_1(a):의 경우 a는 지역변수(regional variable)이므로, a는 함수 내에서 지정된 것. 또한 이때 a에는 아직 할당된 값이 없음(나중에 받아 쓸 예정)

# 사람마다 답변이 조금 달랐고, 내 답변은 비전공자 답변이었다보니 좀 정제되지 않은 느낌을 받을 수 있었음
# 이게 코딩을 할 때에도 티가 나는 것 같았는데, multiplier.py와 pyramid.py의 사람별 코드 작성의 차이를 살펴보면 더욱 느껴짐
# 이렇게 다른 사람의 코드도 보면서, 코드를 칠 때 더 다양한 것을 고려해 좋은 코딩을 해볼 수 있도록 하자(각자의 코드와 그 설명은 각 파이썬 파일에)